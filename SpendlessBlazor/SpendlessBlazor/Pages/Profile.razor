@page "/profile"

@using SpendlessBlazor.Pages
@using System.Linq
@inject SpendlessBlazor.Services.IInfoService InfoService

<h1>Profile (dummy)</h1>


<div class="gap-4 d-flex flex-wrap">
    <MudTextField @bind-Value="textValue" Label="Enter your name" Variant="Variant.Outlined"></MudTextField>
    @code {
        public string? textValue { get; set; }
}
    <MudTextField @bind-Value="income" Label="Income" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.AttachMoney" />
    @code {
        public double income { get; set; } = 0;
    }
</div>
<br />
<button class="btn btn-primary" >Save</button>
<br />
<br />

<h3>Balance: @Balance()</h3>


@code {

    public List<Info> infoList { get; set; } = Expenses.info;

    public double TotalExpenses(List<Info> info)
    {
        return info.Sum(item => item.amount);
    }

    public double Balance()
    {
        return income - TotalExpenses(infoList);
    }

    protected override async Task OnInitializedAsync()
    {
        infoList = InfoService.ReadJson();
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);
    }
}

